import "hashes/mimc7/constants.zok" as constants

def mimc7Hash(field x_in, field k) -> field:
    field[91] c = constants()
    field r = 0
    for field i in 0..91 do
        field t = if i == 0 then k+x_in else k + r + c[i] fi
        field t2 = t * t
        field t4 = t2 * t2
        r = t2 * t4 * t
    endfor
    return r + x_in

def mimc3(field[3] input) -> field:
    field r = 0
    for field i in 0..3 do
        field h = mimc7Hash(input[i], r)
        r = r + input[i] + h
    endfor
    return r

// Inputs for main are:
// - amount (public) is the coin value
// - commitment (public) is the commitment
// - publicKey (private) is the public key of the commitment derived by hashing the Secret Key Sk of the commitment. IT IS KEPT PRIVATE FOR ZK!!!
// - random (private) token random nonce

def main(field[2] publicInput, private field publicKey, private field random) -> bool:

	// public input information 
	field amount = publicInput[0]
	field commitment = publicInput[1]

	// commitment = H(amount|publicKey|random)
	field[3] input = [amount, publicKey, random]
	field commitmentResult = mimc3(input)

	// Check commitment
	return commitment == commitmentResult
